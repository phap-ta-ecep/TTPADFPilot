{
	"name": "plp_ETL_Sub",
	"properties": {
		"activities": [
			{
				"name": "Check file_status ER",
				"description": "if count of 'EF' file > 0 => stop copy file to DB on configId",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select file_name from control.data_file where file_status in ('EF') and data_file_config_id =@{item()}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_GetDataFromDB",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Truncate temp table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Check file_status ER').output",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@variables('isExtractFail')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "AzureSqlSink"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_Pilot_Blod_Broad",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Pilot_SQL_Broad",
												"type": "DatasetReference"
											}
										]
									},
									{
										"name": "Update status to EF",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Set variable1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": []
									},
									{
										"name": "Move file to error folder",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Update status to EF",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"enableStaging": false
										}
									},
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "isExtractFail",
											"value": true
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Truncate temp table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Check file_status ER",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "TRUNCATE TABLE @{concat(variables('tmpTableSchema') , '.' , variables('tmpTableName'))}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Pilot_SQL_Broad",
						"type": "DatasetReference",
						"parameters": {
							"tableName": {
								"value": "@variables('tmpTableName')",
								"type": "Expression"
							},
							"schema": {
								"value": "@variables('tmpTableSchema')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(variables('isExtractFail') , greater(activity('Check file_status ER').output.count, 0))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Merge data from temp to ODS",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						},
						{
							"name": "Move file to Done folder",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Update status SU",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableStaging": false
							}
						},
						{
							"name": "Update status SU",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Merge data from temp to ODS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						}
					]
				}
			}
		],
		"variables": {
			"tmpTableSchema": {
				"type": "String"
			},
			"tmpTableName": {
				"type": "String"
			},
			"isExtractFail": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"folder": {
			"name": "Pilot"
		},
		"annotations": []
	}
}