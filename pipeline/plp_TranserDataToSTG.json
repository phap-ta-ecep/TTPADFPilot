{
	"name": "plp_TranserDataToSTG",
	"properties": {
		"activities": [
			{
				"name": "TR-1-ForEach-ListConfigId",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.listConfigId_Ar",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "TR-1-2-Get lastest transfer and current executionLogId",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "TR-1-1- Set variable configId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "DECLARE @startExecutionId INT;\nDECLARE @endExecutionId INT;\nDECLARE @dataFileType varchar(2);\nDECLARE @odsTableName varchar(30);\nDECLARE @tableType varchar(30) ;\nDECLARE @transferStoreProcedureName varchar(50) ;\n \nEXEC [dbo].[CheckDataIsChanged] @{variables('configId')}, @startExecutionId OUTPUT, @endExecutionId OUTPUT,\n@dataFileType  OUTPUT, \n@odsTableName OUTPUT,\n@tableType OUTPUT,\n@transferStoreProcedureName OUTPUT\n\nSELECT @startExecutionId AS startExecutionId , \n@endExecutionId  AS endExecutionId,\n@dataFileType AS dataFileType, \n@odsTableName AS odsTableName,\n@tableType  AS tableType  ,\n@transferStoreProcedureName AS transferStoreProcedureName",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_Pilot_SQL_Broad",
									"type": "DatasetReference",
									"parameters": {
										"tableName": "Null",
										"schema": "Null"
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "TR-1-3-IF- Data has changed",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "TR-1-2-1- Set variable startExecutionId",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2-3- Set variable dataFileType",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2-4- Set variable odsTableName",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2-2- Set variable endExecutionId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('TR-1-2-Get lastest transfer and current executionLogId').output.value[0].endExecutionId , activity('TR-1-2-Get lastest transfer and current executionLogId').output.value[0].startExecutionId)\n",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "TR-1-2-1- Exit by no data has changed",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "TR-1-3-1-Copy data from ODS to STG",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderStoredProcedureName": "[stg].[usp_transer_process_wrapper]",
												"storedProcedureParameters": {
													"configId": {
														"type": "Int32",
														"value": {
															"value": "@variables('configId')",
															"type": "Expression"
														}
													},
													"dataFileType": {
														"type": "String",
														"value": {
															"value": "@variables('dataFileType')",
															"type": "Expression"
														}
													},
													"endExecutionId": {
														"type": "Int32",
														"value": {
															"value": "@variables('endExcutionId')",
															"type": "Expression"
														}
													},
													"odsTableName": {
														"type": "String",
														"value": {
															"value": "@variables('odsTableName')",
															"type": "Expression"
														}
													},
													"startExecutionId": {
														"type": "Int32",
														"value": {
															"value": "@variables('startExecutionId')",
															"type": "Expression"
														}
													}
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "AzureSqlSink"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_Pilot_SQL_Broad",
												"type": "DatasetReference",
												"parameters": {
													"tableName": "Null",
													"schema": "Null"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Pilot_SQL_STG_Broad",
												"type": "DatasetReference"
											}
										]
									},
									{
										"name": "TR-1-3-2-Update status transfer to successful",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "TR-1-3-1-Copy data from ODS to STG",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": []
									},
									{
										"name": "TR-1-3-3-Update status transfer to error",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "TR-1-3-1-Copy data from ODS to STG",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": []
									},
									{
										"name": "TR-1-3-5-Pipeline to control error",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "TR-1-3-3-Update status transfer to error",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"waitOnCompletion": true
										}
									},
									{
										"name": "TR-1-3-4- Set variable isTransferError to True",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "TR-1-3-1-Copy data from ODS to STG",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"waitOnCompletion": true
										}
									}
								]
							}
						},
						{
							"name": "TR-1-1- Set variable configId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "configId",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-1- Set variable startExecutionId",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TR-1-2-Get lastest transfer and current executionLogId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "startExecutionId",
								"value": {
									"value": "@activity('TR-1-2-Get lastest transfer and current executionLogId').output.value.startExecutionId",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-2- Set variable endExecutionId",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TR-1-2-Get lastest transfer and current executionLogId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "endExcutionId",
								"value": {
									"value": "@activity('TR-1-2-Get lastest transfer and current executionLogId').output.value.endExecutionId",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-3- Set variable dataFileType",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TR-1-2-Get lastest transfer and current executionLogId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "dataFileType",
								"value": {
									"value": "@activity('TR-1-2-Get lastest transfer and current executionLogId').output.value.dataFileType",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-4- Set variable odsTableName",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TR-1-2-Get lastest transfer and current executionLogId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "odsTableName",
								"value": {
									"value": "@activity('TR-1-2-Get lastest transfer and current executionLogId').output.value.odsTableName",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "TR-2-IF-Transfer got error",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "TR-1-ForEach-ListConfigId",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('isTransferError')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "TR-1-2-2- No error in transfer",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "TR-1-2-1- Got error in transfer",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			},
			{
				"name": "TR-3-Execute Pipeline to control fail",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "TR-1-ForEach-ListConfigId",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true
				}
			}
		],
		"parameters": {
			"listConfigId_Ar": {
				"type": "array",
				"defaultValue": [
					"1"
				]
			}
		},
		"variables": {
			"configId": {
				"type": "String"
			},
			"startExecutionId": {
				"type": "String"
			},
			"endExcutionId": {
				"type": "String"
			},
			"isTransferError": {
				"type": "Boolean",
				"defaultValue": false
			},
			"dataFileType": {
				"type": "String"
			},
			"odsTableName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Pilot"
		},
		"annotations": []
	}
}