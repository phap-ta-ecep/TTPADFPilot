{
	"name": "plp_TranserDataToSTG",
	"properties": {
		"activities": [
			{
				"name": "TR-1-ForEach-ListConfigId",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.listConfigId_Ar",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "TR-1-2-Lookup-The Data Has Changed",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "TR-1-1- Set variable configId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "DECLARE @startExecutionId INT;\nDECLARE @endExecutionId INT;\nEXEC [dbo].[CheckDataIsChanged] @{variables('configId')}, @startExecutionId OUTPUT, @endExecutionId OUTPUT\nSELECT @startExecutionId AS startExecutionId , @endExecutionId  AS endExecutionId ",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_Pilot_SQL_Broad",
									"type": "DatasetReference",
									"parameters": {
										"tableName": "Null",
										"schema": "Null"
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "TR-1-3-IF- Data has changed",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "TR-1-2-Lookup-The Data Has Changed",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('TR-1-2-Lookup-The Data Has Changed').output.value[0].endExecutionId , activity('TR-1-2-Lookup-The Data Has Changed').output.value[0].startExecutionId)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "TR-1-2-1- Exit by no data has changed",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "TR-1-2-1- Start transfer data to STG",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								]
							}
						},
						{
							"name": "TR-1-1- Set variable configId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "configId",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"listConfigId_Ar": {
				"type": "array",
				"defaultValue": [
					"1"
				]
			}
		},
		"variables": {
			"configId": {
				"type": "String"
			},
			"startExecutionId": {
				"type": "String"
			},
			"endExcutionId": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Pilot"
		},
		"annotations": []
	}
}