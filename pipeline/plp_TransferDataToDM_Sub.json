{
	"name": "plp_TransferDataToDM_Sub",
	"properties": {
		"activities": [
			{
				"name": "TR-1-2-Get process concurrent trans infor",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select a.process_id, b.concurrent_trans_name, b.start_execution_id, b.end_execution_id, b.is_complete\nfrom control.process a\ninner join control.process_concurrent_trans b on a.process_id = b.process_id\nwhere a.process_config_id = @{pipeline().parameters.processConfigId} and a.process_status ='PS';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Pilot_SQL_Broad",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "Null",
							"schema": "Null"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "TR-1-2-Get process concurrent trans infor",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('TR-1-2-Get process concurrent trans infor').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "TR-1-2-1- Set variable startExecutionId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "startExecutionId",
								"value": {
									"value": "@item().start_execution_id",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-2- Set variable endExecutionId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "endExcutionId",
								"value": {
									"value": "@item().end_execution_id",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-4- Set variable concurrentTransName_copy1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "concurrentTransName",
								"value": {
									"value": "@item().concurrent_trans_name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2-5- Set variable isComplete",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "isComplete",
								"value": {
									"value": "@item().is_complete",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-3-IF- Data has changed_copy1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "TR-1-2-1- Set variable startExecutionId",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2-2- Set variable endExecutionId",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2-4- Set variable concurrentTransName_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2-5- Set variable isComplete",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(variables('endExcutionId'), variables('startExecutionId'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Update is_complete to 1",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "update control.process_concurrent_trans \nset is_complete = 1, dt_lastchange = getdate()\nwhere process_id =@{variables('processId')} \nand concurrent_trans_name = @{variables('concurrentTransName')}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DS_Pilot_SQL_Broad",
												"type": "DatasetReference",
												"parameters": {
													"tableName": "Null",
													"schema": "Null"
												}
											},
											"firstRowOnly": false
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Transfer data to Des DB",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select * from @{variables('concurrentTransName')}\nwhere ODSLastUpdateExecutionId > @{variables('startExecutionId')} \nand ODSLastUpdateExecutionId <= @{variables('endExcutionId')}\n;",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "SqlServerSink",
												"disableMetricsCollection": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_Pilot_SQL_Broad",
												"type": "DatasetReference",
												"parameters": {
													"tableName": "Null",
													"schema": "Null"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Pilot_SQL_AWS_DES",
												"type": "DatasetReference",
												"parameters": {
													"dbName": "pilotDesDB"
												}
											}
										]
									},
									{
										"name": "TR-1-3-2-Update status transfer to successful_copy1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Transfer data to Des DB",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[ods].[ctl_transfer_process_log]",
											"storedProcedureParameters": {
												"configId": {
													"value": {
														"value": "@variables('configId')",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"endExecutionId": {
													"value": {
														"value": "@variables('endExcutionId')",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"runId": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"startExecutionId": {
													"value": {
														"value": "@variables('startExecutionId')",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"tableName": {
													"value": {
														"value": "@variables('odsTableName')",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "connectSQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "TR-1-3-3-Pipeline to control error_copy1",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Transfer data to Des DB",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "plp_Control_Pipeline_Fail",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"PipelineName": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"DataFactoryName": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"ErrorMessage": {
													"value": "@activity('TR-1-3-1-Copy data from ODS to STG').output.errors[0].Message",
													"type": "Expression"
												},
												"RunID": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"TriggerTime": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "TR-1-3-4- Set variable isTransferError to True_copy1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Transfer data to Des DB",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "isTransferError",
											"value": {
												"value": "@bool(1)",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "TR-1-2-5- Set variable processId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "processId",
								"value": {
									"value": "@item().process_id",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"processConfigId": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"variables": {
			"configId": {
				"type": "String"
			},
			"startExecutionId": {
				"type": "String"
			},
			"endExcutionId": {
				"type": "String"
			},
			"isTransferError": {
				"type": "Boolean",
				"defaultValue": false
			},
			"transferStoreProcedureName": {
				"type": "String"
			},
			"processId": {
				"type": "String"
			},
			"concurrentTransName": {
				"type": "String"
			},
			"isComplete": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Pilot"
		},
		"annotations": []
	}
}