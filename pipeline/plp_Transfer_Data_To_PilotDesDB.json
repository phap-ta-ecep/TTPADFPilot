{
	"name": "plp_Transfer_Data_To_PilotDesDB",
	"properties": {
		"activities": [
			{
				"name": "TR-1-Get transfer process information",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "TR-0 Insert process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT a.process_id, b.concurrent_trans_name, b.start_execution_id, b.end_execution_id, b.is_complete,\nREPLACE(REPLACE(SUBSTRING( b.concurrent_trans_name ,CHARINDEX('.',  b.concurrent_trans_name)+1 , LEN( b.concurrent_trans_name)), '[' ,''), ']','')+'Type' as table_type,\n'[stg].[usp_transfer_Board_' + REPLACE(REPLACE(SUBSTRING( b.concurrent_trans_name ,CHARINDEX('.',  b.concurrent_trans_name)+1 , LEN( b.concurrent_trans_name)), '[' ,''), ']','')+']' as transfer_sp\nFROM [control].[process] a\nINNER JOIN [control].[process_concurrent_trans] b ON a.process_id = b.process_id\nWHERE a.process_config_id = @{pipeline().parameters.processConfigId} AND a.process_status ='PR';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Pilot_SQL_Broad",
						"type": "DatasetReference",
						"parameters": {
							"tableName": "Null",
							"schema": "Null"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "TR-2-ForEach-lookup results",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "TR-1-Get transfer process information",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('TR-1-Get transfer process information').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "TR-1-1- Set variable startExecutionId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "startExecutionId",
								"value": {
									"value": "@string(item().start_execution_id)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-2- Set variable endExecutionId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "endExcutionId",
								"value": {
									"value": "@string(item().end_execution_id)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-4- Set variable concurrentTransName_copy1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "concurrentTransName",
								"value": {
									"value": "@item().concurrent_trans_name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-3- Set variable isComplete",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "isComplete",
								"value": {
									"value": "@string(item().is_complete)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-8-IF- Data has changed",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "TR-1-1- Set variable startExecutionId",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-2- Set variable endExecutionId",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-4- Set variable concurrentTransName_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-3- Set variable isComplete",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-5- Set variable tableType",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-6- Set variable processId",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "TR-1-7- Set variable transferSP",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(\ngreater(int(variables('endExcutionId')), int(variables('startExecutionId'))),\nequals(variables('isComplete'),'false')\n)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "TR-1-8-4-Update sub process status",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[ods].[ctl_update_Process_Status]",
											"storedProcedureParameters": {
												"concurrentTransName": {
													"value": {
														"value": "@variables('concurrentTransName')",
														"type": "Expression"
													},
													"type": "String"
												},
												"isComplete": {
													"value": "1",
													"type": "Int32"
												},
												"pipelineRunId": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"processId": {
													"value": {
														"value": "@variables('processId')",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"processStatus": {
													"value": null,
													"type": "String"
												},
												"updateType": {
													"value": "1",
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "connectSQL",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "TR-1-8-1-Transfer data to Des DB",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select * from @{variables('concurrentTransName')}\nwhere STGLastUpdateExecutionId > @{variables('startExecutionId')} \nand STGLastUpdateExecutionId <= @{variables('endExcutionId')}\n;",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "SqlServerSink",
												"sqlWriterStoredProcedureName": {
													"value": "@variables('transferSPName')",
													"type": "Expression"
												},
												"sqlWriterTableType": {
													"value": "@variables('tableType')",
													"type": "Expression"
												},
												"storedProcedureTableTypeParameterName": "source",
												"disableMetricsCollection": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_Pilot_SQL_Broad",
												"type": "DatasetReference",
												"parameters": {
													"tableName": "Null",
													"schema": "Null"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Pilot_SQL_AWS_DES",
												"type": "DatasetReference",
												"parameters": {
													"dbName": "pilotDesDB"
												}
											}
										]
									},
									{
										"name": "TR-1-8-2-Update sub process status",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "TR-1-8-1-Transfer data to Des DB",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[ods].[ctl_update_Process_Status]",
											"storedProcedureParameters": {
												"concurrentTransName": {
													"value": {
														"value": "@variables('concurrentTransName')",
														"type": "Expression"
													},
													"type": "String"
												},
												"isComplete": {
													"value": "1",
													"type": "Int32"
												},
												"pipelineRunId": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"processId": {
													"value": {
														"value": "@variables('processId')",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"processStatus": {
													"value": null,
													"type": "String"
												},
												"updateType": {
													"value": "1",
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "connectSQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "TR-1-8-3-Pipeline to control error",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "TR-1-8-1-Transfer data to Des DB",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "plp_Control_Pipeline_Fail",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"PipelineName": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"DataFactoryName": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"ErrorMessage": {
													"value": "@activity('TR-1-8-1-Transfer data to Des DB').Error.Message",
													"type": "Expression"
												},
												"RunID": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"TriggerTime": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "TR-1-8-4 Set variable isTransferError",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "TR-1-8-1-Transfer data to Des DB",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "isTransferError",
											"value": {
												"value": "@bool(1)",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "TR-1-6- Set variable processId",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "processId",
								"value": {
									"value": "@string(item().process_id)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-5- Set variable tableType",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "tableType",
								"value": {
									"value": "@item().table_type",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TR-1-7- Set variable transferSP",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "transferSPName",
								"value": {
									"value": "@item().transfer_sp",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "TR-0 Insert process",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[stg].[usp_transfer_Board_To_PilotDesDB]",
					"storedProcedureParameters": {
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "connectSQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "TR-4-Pipeline to control error",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "TR-0 Insert process",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "plp_Control_Pipeline_Fail",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"ErrorMessage": {
							"value": "@activity('TR-0 Insert process').Error.Message",
							"type": "Expression"
						},
						"RunID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"TriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"TriggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "TR-3-check to update process status",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "TR-2-ForEach-lookup results",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(greater(activity('TR-1-Get transfer process information').output.count,0) , not(variables('isTransferError')) )\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "TR-3-5 Exit by no transfer process",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "TR-3-1-Update process status SU",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ods].[ctl_update_Process_Status]",
								"storedProcedureParameters": {
									"concurrentTransName": {
										"value": {
											"value": "@variables('concurrentTransName')",
											"type": "Expression"
										},
										"type": "String"
									},
									"isComplete": {
										"value": null,
										"type": "Int32"
									},
									"pipelineRunId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"processId": {
										"value": {
											"value": "@variables('processId')",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"processStatus": {
										"value": "SU",
										"type": "String"
									},
									"updateType": {
										"value": "2",
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "connectSQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "TR-3-3-Pipeline to control error",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "TR-3-1-Update process status SU",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "plp_Control_Pipeline_Fail",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"ErrorMessage": {
										"value": "@activity('TR-3-1-Update process status SU').Error.Message",
										"type": "Expression"
									},
									"RunID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"TriggerName": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"TriggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "TR-3-2-Lastest to update Guid",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "TR-3-1-Update process status SU",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[stg].[usp_transfer_Lastest_Update_Guid_On_STG]"
							},
							"linkedServiceName": {
								"referenceName": "LS_AWS_SqlServer",
								"type": "LinkedServiceReference",
								"parameters": {
									"dbName": "PilotDesDB"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"processConfigId": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"variables": {
			"startExecutionId": {
				"type": "String"
			},
			"endExcutionId": {
				"type": "String"
			},
			"isTransferError": {
				"type": "Boolean",
				"defaultValue": false
			},
			"transferSPName": {
				"type": "String"
			},
			"processId": {
				"type": "String"
			},
			"concurrentTransName": {
				"type": "String"
			},
			"isComplete": {
				"type": "String"
			},
			"tableType": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Pilot"
		},
		"annotations": []
	}
}